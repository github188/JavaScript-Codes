<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>

	<div id="clist" style="position:absolute;left:0px;top:0px; width:1050px; height:720px; background:url(images2/cover02.png);visibility:hidden;overflow:hidden;">

		<div id="pages" style="position:absolute;left:200px;top:2px;width:100px;color:white;font-size:26px;">第<span id="curr_page">3</span>/<span id="total_page">10</span>页</div>

		<div id="l_container" style="position:absolute;left:23px;top:44px;width:977px;height:720px;">
			<!-- 右侧表 -->
			<table id="lc_progs" cellpadding="0" cellspacing="0" width="330" height="640" style="position:absolute;left:70px;top:0;width:330px; height:640px;font-size:24px;color:#a0a2a4;">
			</table>
			<!-- 焦点框 -->
			<div id="lc_focus" style="position:absolute;left:30px;top:-16px; width:400px; height:113px; background:url(images2/list_focus.png);">
				<!-- 回看图标 + 箭头 -->
				<div style="width:400px; height:113px; background:url(images2/icon_hk_list.png) no-repeat 315px center;">
					<i style="position:absolute;right:-35px;top:37px;width:40px;height:40px;background:url(images2/arrow_right.png) no-repeat">	
					</i>
				</div>
			</div>
		</div>
	</div>


	<!-- lizc -->
	<div id="pf" style="position:absolute;left:0;top:0;width:1280px;height:720px;display:none;">
		<!-- 全局  -->
		<div id="pf_global" style="position:absolute;left:182px;top:482px;width:713px; height:147px; background:url(images2/tab_bg1.png);">
			
			<!-- 1. 左边，播放状态控制栏 -->
			<div id="pfg_status" style="position: absolute;left: 14px;top: 12px;width: 320px;height: 30px;">
				<!-- LEFT -->
				<div style="float: left; width:50%; height:30px;display: none;">
					<img id="pfgs_left" src="images2/ctrl_fast.png" width="128" height="32">
				</div>
				<!-- RIGHT -->
				<div style="float:left; width:50%; height:30px;display: none;">
					<img id="pfgs_right" src="images2/ch_list.png" width="128" height="32">
				</div>
			</div> <!-- 1. 左边，播放状态控制栏 END -->

			<!-- 2. 右边，日期时间 -->
			<div id="pfg_date" style="position:absolute;left:504px;width:100px; line-height:53px; font-size:22px; color:#eaeaea;">
			</div>
			<div id="pfg_time" style="position:absolute;left:600px;width:100px; line-height:53px; font-size:35px; color:#f9f9f9;">
			</div> <!-- 2. 右边，日期时间 END -->
		
	  		<!-- 3. 回看/时移 -->
			<div id="pfg_tvodTstv" style="display:none;">
				<!-- 开始时间 -->
				<div id="pfgt_start" style="position:absolute;left:14px;top:76px;font-size:20px; color:#dde0e0;">15:30</div>
				<!-- 结束时间 -->
				<div id="pfgt_end" style="position:absolute;left:647px;top:76px;font-size:20px; color:#dde0e0;">16:30</div>
				<!-- 状态图标 -->
				<div style="position:absolute;left:14px;top:97px; width:40px; height:40px;">
					<img id="pfgt_status" src="images2/icon_hk.png" width="39" height="39">
				</div>
				<!-- 正在播放的节目信息 -->
				<div style="position:absolute;left:83px;top:104px;font-size:22px; color:#e2e2e2;">
					<span id="pfgt_programTitle">回看播放</span>：
					<span id="pfgt_programName">如果蜗牛有爱情  22集（</span>
					<span id="pfgt_programTime">2016-12-01  14:32</span>）
				</div>
				<!--播放条-->
				<div style="position:absolute;left:83px;top:83px; width:559px; height:4px; background:url(images2/pf_bg.png);">
					<div style="position:absolute;left:-14px;top:-14px; width:29px; height:32px; background:url(images2/pf_bar01.png);"></div>
					<div id="pfgt_process" style="position:absolute;left:15px;top:-14px; width:215px; height:32px; background:url(images2/pf_bar02.png);"></div>
					<div style="position:absolute;left:230px;top:-14px; width:29px; height:32px; background:url(images2/pf_bar03.png);"></div>
				</div>
			</div> <!-- 3. 回看/时移 END -->

			<!-- 4. 直播 -->
			<div id="pf_live" style="display:none;">
				<div id="pfl_chanNo" style="position:absolute;left:14px;top:73px;font-size:24px; color:#fff;">015</div>
				<div id="pfl_chanName" style="position:absolute;left:14px;top:104px;font-size:26px; color:#fff;">东方卫视</div>
				<div style="position:absolute;left:149px;top:69px; width:1px; height:61px; background:url(images2/line01.png);"></div>
				<div style="position:absolute;left:172px;top:78px; width:1px; height:61px;">
					<img id="pfl_channIcon" src="images2/icon_play.png" width="55" height="47">
				</div>

				<!-- 当前播放频道时间点和名称 -->
				<div style="position:absolute;left:242px;top:62px;font-size:22px; color:#e2e2e2;">正在直播&nbsp;&nbsp;
					<span id="pfl_progTime">19:20</span>&nbsp;&nbsp;
					<span id="pfl_progName">非诚勿扰</span>
				</div>

				<!-- 下一个频道时间点和名称 -->
				<div style="position:absolute;left:242px;top:116px;font-size:22px; color:#b0b0b1;">下一节目&nbsp;&nbsp;
					<span id="pfl_nextProgTime">19:00</span>&nbsp;&nbsp;
					<span id="pfl_nextProgName">新闻联播</span>
				</div>
				<!--播放条-->
				<div style="position:absolute;left:244px;top:99px; width:426px; height:4px; background:url(images2/pf_bg2.png);">
					<div style="position:absolute;left:-14px;top:-14px; width:29px; height:32px; background:url(images2/pf_bar01.png);"></div>
					<div id="pfl_process" style="position:absolute;left:15px;top:-14px; width:116px; height:32px; background:url(images2/pf_bar02.png);"></div>
					<div style="position:absolute;left:131px;top:-14px; width:29px; height:32px; background:url(images2/pf_bar03.png);"></div>
				</div>
			</div> <!-- 4. 直播 END -->
		</div>

		<!--广告-->
		<div style="position:absolute;left:900px;top:481px; width:100px; height:100px;"><img src="images2/ad1.jpg" width="251" height="149"></div>
	</div>


	<script type="text/javascript">
		

		// 列表
		var pcChanFocus 	= 0,
			pcLines 		= 8,
			pcFocusTop 		= -16,
			pcChanDatas 	= null,
			pcChannelListData = [],
			pcFocusId 		= 'lc_focus',
			pcPrefix 		= 'chanList',
			pcChan 			= '',
			pcIsChanListShow = false,
			pcChanLines 		= 0,
			pcDataIndex 	= 0,
			pcTotalPages 	= 0,
			pcCurrPage 		= 0;


		function pcListInit() {

			pcChanFocus = 0;

			pcDataInit();

			pcShowData( 0 );

			pcChanListGetFocus();
		}

		function pcDataInit() {

			pcChanDatas = pcGetData();

			pcChanLines = pcChanDatas.length;

			pcTotalPages = Math.ceil( pcChanLines / pcLines );

			pcCurrPage = 1;

			debug($( 'total_page' ));

			$( 'curr_page' ).innerText = pcCurrPage;
			$( 'total_page' ).innerText = pcTotalPages;

			debug( 'pcDataInit pcTotalPages = ' + pcTotalPages );
		}

		function pcChangeCurrPage( page ) {

			$( 'curr_page' ).innerText = page;
		}

		// test data
		var channelIds 		= [ 
								1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
								13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
							],
			channelNames 	= [ 
								'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 
								'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 
								'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 'fll', 'fll' 
							],

			channelNumsShow = [ 
								'001', '002', '003', '004', '005', '006', '007', '008', '009', '010', '011', '012', 
								'001', '002', '003', '004', '005', '006', '007', '008', '009', '010', '011', '012',
								'001' 
							];

		function pcGetData() {
			
			var len = channelIds.length,
				i 	= 0,
				datas = [],
				data = null;

			for ( ;i < len; i++ ) {

				datas[ i ] = datas[ i ] || {};

				data = datas[ i ];

				data.id 	= channelIds[ i ];
				data.name 	= channelNames[ i ];
				data.no 	= channelNumsShow[ i ];
			}

			return datas;
		}

		function pcClearTable() {
			
			var len = pcLines,
				i 	= 0;

			for ( ; i < len; i++ ) {

				tr = $( pcPrefix + i );

				// programs time
				tds = tr.getElementsByTagName( 'td' );

				// id
				tds[0].innerText = '';

				// prog
				spans = tds[1].getElementsByTagName( 'span' );

				spans[0].innerText = '';
				spans[1].innerText = '';
			}
		}

		function pcRefreshData( start ) {
		
			pcClearTable();

			debug( 'pcRefreshData pcCurrPage = ' + pcCurrPage );

			pcChangeCurrPage( start / pcLines + 1 );

			pcShowData( start );
		}

		function pcShowData( start ) {
			
			var i = 0,
				chanLen = 0,
				tds = null,
				td = null,
				tr = null,
				spans = null,
				textNode = null,
				len = pcLines;


			chanLen = channelIds.length;

			debug( 'pcShowData chanLen = ' + chanLen );
			debug( 'pcShowData start = ' + start );
			if ( chanLen < len ) {

				len = chanLen;

				start = 0;
			} else if ( start > 0 && chanLen >= len ) {

				len = chanLen - start;

				if ( len > pcLines ) {

					len = pcLines;
				}
			}

			debug( 'pcShowData len = ' + len );

			for ( ; i < len; i++ ) {

				tr = $( pcPrefix + i );

				// programs time
				tds = tr.getElementsByTagName( 'td' );

				// id
				tds[0].innerText = pcChanDatas[i + start].id;

				// prog
				spans = tds[1].getElementsByTagName( 'span' );

				spans[0].innerText = pcChanDatas[i + start].name;
				spans[1].innerText = '黄金档：我是混球';
			}
		}


		function pcChanListLoseFocus() {
			
			$( pcPrefix + pcChanFocus ).style.color = '#a0a2a4';
		}

		function pcChanListGetFocus() {

			var top 	= 0,
				trH 	= 80;

			debug( 'pcChanListGetFocus pcPrefix = ' + pcPrefix );
			debug( 'pcChanListGetFocus pcChanFocus = ' + pcChanFocus );
			debug( 'pcChanListGetFocus pcFocusId = ' + pcFocusId );

			$( pcPrefix + pcChanFocus ).style.color = '#ffffff';

			$( pcFocusId ).style.top = ( pcFocusTop + trH * pcChanFocus ) + 'px';
		}

		function pcChangeChanList( direction ) {
			
			var line = pcLines,
				start = 0;

			if ( direction !== -1 && direction !== 1 ) {

				return false;
			} 

			debug( 'pcChangeChanList 0000000 pcDataIndex = ' + pcDataIndex );
			if ( pcChanLines < pcLines ) {

				line = pcChanLines;

				pcDataIndex = 0;

			} else if ( pcDataIndex > 0 && pcChanLines - pcDataIndex < pcLines ) {

				line = pcChanLines - pcDataIndex;	
			}

			debug( 'pcChangeChanList pcChanLines = ' + pcChanLines );
			debug( 'pcChangeChanList direction = ' + direction );
			debug( 'pcChangeChanList line = ' + line );
			debug( 'pcChangeChanList pcChanFocus = ' + pcChanFocus );
			debug( 'pcChangeChanList pcDataIndex = ' + pcDataIndex );

			if ( ( direction < 0 &&  pcChanFocus === 0 && pcDataIndex === 0 ) || 
				( direction > 0 && ( pcDataIndex + pcChanFocus + 1 === pcChanLines ) ) ) {

				debug( 'pcChangeChanList ---- do nothing' );

				return;
			}


			pcChanListLoseFocus();

			if ( direction > 0 && pcChanFocus === pcLines - 1 && pcChanLines > pcLines ) {

				// 重新刷新数据
				pcDataIndex += pcLines;

				// 焦点归零
				pcChanFocus = 0;

				debug( 'pcChangeChanList 33333 pcDataIndex = ' + pcDataIndex );

				pcRefreshData( pcDataIndex );

			} else if ( direction < 0 && pcChanFocus === 0 && pcDataIndex > 0 ) {

				pcDataIndex = pcDataIndex - pcLines > 0 ? pcDataIndex - pcLines : 0;

				debug( 'pcChangeChanList 44444 pcDataIndex = ' + pcDataIndex );

				pcRefreshData( pcDataIndex );
			} else {

				pcChanFocus = direction > 0 ? pcChanFocus + 1 : pcChanFocus - 1;
			}

			if ( pcChanFocus < 0 ) {

				pcChanFocus = 0;
			} else if ( pcChanFocus >= line ) {

				pcChanFocus = line - 1;
			}

			debug( 'pcChangeChanList 222 pcChanFocus = ' + pcChanFocus );
			debug( 'pcChangeChanList 222 pcDataIndex = ' + pcDataIndex );

			pcChanListGetFocus();
		}

		function pcKeyUp() {
			
			pcChangeChanList( -1 );
		}

		function pcKeyDown() {
			
			pcChangeChanList( 1 );
		}

		function pcGenerateTable() {
			
			var i = 0,
				len = pcLines,
				content = '';

			debug( '----------- generateTable, len = ' + len );

			for ( ; i < len; i++ ) {

				content += '<tr id=' + pcPrefix + i + ' style="height: 80px; color: #a0a2a4;">'
							 + '<td style="width: 85px; font-size: 30px;"></td>'
							 + '<td style="width: 245px;">'
							 	 + '<span></span>'
								 + '<br>'
								 + '<span style="font-size: 20px;"></span>'
						 	+ '</td>'
						 + '</tr>';
			}

			$( 'lc_progs' ).innerHTML = content;
		}

		function pcShowChanList() {
			
			if ( !pcIsChanListShow ) {

				pcIsChanListShow = true;

				$( 'clist' ).style.visibility = 'visible';
			}

			pcGenerateTable();

			// chanTableInit();

			pcListInit();
		}

		function pcHideChanList() {
			
			if ( pcIsChanListShow ) {

				pcIsChanListShow = false;

				$( 'clist' ).style.visibility = 'hidden';
			}
		}

		/*
		
			1.  进入页面立即显示出来 : showProgress( 'LiveTV' );

			2.  按键处理 : pcKeyHandler();

				2.1 确认键处理：弹出频道列表：showChannelList(); [先不处理]

				2.2 106-1：暂停播放，显示进入时移进度条 mp.pause() -> showProgress( 'LiveTSTV' );

				2.3 106-2：直接进入时宜进度条，并且开始播放：mp.resume();

				2.4 106-3：暂停时宜播放 mp.pause()

				2.5 106-4：恢复播放 mp.resume()

				2.6 8： 返回键，显示直播进度条，并且播放直播 mp.joinChannel( currId )

		 */
		


			// 当前进度条 id
			var pcPid = '';

			// 系统时间计时器
			var pcTimer = null;

			/*
			    播放类型，
			    直播：'LiveTV'
			    时移：'TSTV'
			    回看：'TVOD'
			    直播时移状态：'LiveTSTV'
			    直播回看状态：'LiveTVOD'
			 */
			var pcType = 'LiveTV';

			/*
			    播放状态：play, pause, fastforward, fastrewind, stop
			 */
			var pcStatus = 'play';

			var pcSpeed = 0;

			// 节目标题
			var pcTitles = {

			    tvod: '回看播放',
			    tstv: '时移播放'
			};

			// 播控相关元素 id
			var pcIds = {

			    progress: 'pf',

			    // 时间区元素 ID
			    date: 'pfg_date',
			    time: 'pfg_time',

			    // 广告元素 ID
			    adWrap: 'ad_wrap', // 广告外层div
			    ad: 'ad',

			    // 播控状态区元素 ID
			    status: 'pfg_status',
			    statusL: 'pfgs_left',
			    statusR: 'pfgs_right',

			    // 回看时移进度条区元素 id
			    tvodTstv: 'pfg_tvodTstv',
			    tvodTstvStart: 'pfgt_start',
			    tvodTstvEnd: 'pfgt_end',
			    tvodTstvStatus: 'pfgt_status',
			    tvodTstvProgTitle: 'pfgt_programTitle',
			    tvodTstvProgName: 'pfgt_programName',
			    tvodTstvProgTime: 'pfgt_programTime',
			    tvodTstvProcess: 'pfgt_process',

			    // 直播进度条区元素 ID
			    chan: 'pf_live',
			    chanNo: 'pfl_chanNo',
			    chanName: 'pfl_chanName',
			    chanIcon: 'pfl_channIcon',
			    chanProgTime: 'pfl_progTime',
			    chanProgName: 'pfl_progName',
			    chanNextProgTime: 'pfl_nextProgTime',
			    chanNextProgName: 'pfl_nextProgName',
			    chanProcess: 'pfl_process'
			};

			// 播控相关的元素图片路径
			var pcIcons = {

			    fast: 'images2/ctrl_fast.png',
			    tvod: 'images2/icon_hk.png',
			    tvodBig: 'images2/icon_hk_big.png',
			    tvodBtn: 'images2/icon_hk_btn.png',
			    goTvod: 'images2/left_2tvod.png',
			    tstv: 'images2/icon_sy.png',
			    tstvBig: 'images2/icon_sy_big.png',
			    goTstv: 'images2/enter_tstv.png',
			    exitTvod: 'images2/exit_tvod.png',
			    exitTstv: 'images2/exit_tstv.png',
			    chanList: 'images2/ch_list.png',
			    playPause: 'images2/play_pause.png',
			    play: 'images2/icon_play.png'
			    
			};

			var pcIsProgressShow = false;

			pcInit( 'LiveTV' );

			function pcInit( type ) {

				debug( '----- progress init isShow = ' + pcIsProgressShow );
			    pcType = type;

			    pcShowProgress();

			    // 启动系统时间
			    pcTiming();

			    pcShow();
			}

			// 系统时间
			function pcTiming() {

			    var d       = new Date(),
			        month   = d.getMonth() + 1,
			        date    = d.getDate(),
			        hour    = d.getHours(),
			        minute  = d.getMinutes();

			    month   = month < 10 ? '0' + month : '' + month;
			    date    = date < 10 ? '0' + date : '' + date;
			    hour    = hour < 10 ? '0' + hour : '' + hour;
			    minute  = minute < 10 ? '0' + minute : '' + minute;

			    // 更新时间
			    $( pcIds.date ).innerHTML = month + '月' + date + '日';
			    $( pcIds.time ).innerHTML = hour + ':' + minute;

			    clearTimeout( pcTimer );
			    pcTimer = setTimeout( function () {

			        pcTiming();

			    }, 1000 );
			};

		    function pcShow() {

		        var type    = pcType,
		            ids     = pcIds,
		            titles  = pcTitles,
		            icons   = pcIcons,
		            stIcon  = '',
		            src     = '';


		    	debug( '----- progress show, type = ' + type );

		        pcUpdate();

		        if ( type === 'LiveTV' || type === 'LiveTSTV' || type === 'LiveTVOD' ) { // liveTV 或者 直播暂停 或 直播回看

		        	$( ids.chan ).style.display = 'block';
		        	$( ids.tvodTstv ).style.display = 'none';

		            if ( type === 'LiveTV' ) {

		                src = icons.play;
		            } else if ( type === 'LiveTSTV' ) {

		                src = icons.tstv;
		            } else if ( type === 'LiveTVOD' ) {

		                src = icons.tvod;
		            }

		            // 类型图标
		            $( ids.chanIcon ).src = src;

		        } else if ( type === 'TSTV' || type === 'TVOD' ) { // TSTV 或 TVOD

		            // title 需要修改
		            $( ids.tvodTstvProgTitle ).innerHTML = ( type === 'TSTV' ? titles.tstv : titles.tvod );

		            // 类型图标
		            $( ids.tvodTstvStatus ).src = type === 'TSTV' ? icons.tstv : icons.tvod;

		            $( ids.tvodTstv ).style.display = 'block';
		            $( ids.chan ).style.display 	= 'none';
		        }
		    }

		     function pcUpdate() {

		        var ids         = pcIds,
		            icons       = pcIcons,
		            leftIcon    = '',
		            rightIcon   = '';


		    	debug( '----- progress update, type = ' + pcType );

		        switch ( pcType ) {

		            case 'LiveTV':     // LiveTV
		                leftIcon    = '';
		                rightIcon   = icons.chanList;
		                pcPid       = ids.chanProcess;
		                break;
		            case 'TSTV':     // TSTV
		                leftIcon    = icons.exitTstv;
		                rightIcon   = icons.chanList;
		                pcPid       = ids.tvodTstvProcess;
		                break;
		            case 'TVOD':     // TVOD
		                leftIcon    = icons.exitTvod;
		                rightIcon   = icons.playPause;
		                pcPid       = ids.tvodTstvProcess;
		                break;
		            case 'LiveTSTV':     // 直播暂停状态
		                leftIcon    = icons.goTstv;
		                rightIcon   = icons.chanList;
		                pcPid       = ids.chanProcess;
		                break;
		            case 'LiveTVOD':     // 直播回看状态
		                leftIcon    = icons.fast;
		                rightIcon   = icons.chanList;
		                pcPid       = ids.chanProcess;
		                break;

		            // no default
		        }

		        debug( 'type = ' + pcType + ', left: ' + leftIcon + ', rightIcon = ' + rightIcon );

		        if ( leftIcon !== '' ) {

		            $( ids.statusL ).parentNode.style.display = 'block';
		            $( ids.statusL ).src = leftIcon;
		        } else {

		            $( ids.statusL ).parentNode.style.display = 'none';
		        }

		        if ( rightIcon !== '' ) {

		            $( ids.statusR ).parentNode.style.display = 'block';
		            $( ids.statusR ).src = rightIcon;
		        }
		    }

    	function pcUpdateAd( image ) {
            
            $( pcIds.ad ).src = image;
        }

        function pcPauseOrPlay() {

            var playStatus = [ 'fastforward', 'fastrewind', 'pause' ];


        	debug( '----- progress pauseOrPlay status = ' + pcStatus );
        	debug( '----- progress pauseOrPlay type = ' + pcType );

            if ( pcType === 'LiveTV' && pcStatus === 'play' ) { // 直播暂停

                pcType = 'LiveTSTV';

	            pcShow();

                // 要暂停播放
                // mp.pause();
                debug( 'LiveTV mp.pause();' );
                pcStatus = 'pause';

            } else if ( pcType === 'LiveTSTV' ) { // 直播时移状态，再按播放进入时移

                pcType = 'TSTV';

	            pcShow();

                // 进入时移，恢复播放
                // mp.resume();
                debug( 'LiveTSTV mp.resume();' );
                pcStatus = 'play';

            } else if ( 'TSTV' ) { // 时移暂停，暂停或播放

                if ( pcStatus === 'play' ) {

                    // mp.pause();
                    debug( 'TSTV mp.pause();' );
                    pcStatus = 'pause';

                } else if ( pcStatus === 'pause' ) {

                    // mp.resume();
                    debug( 'TSTV mp.resume();' );
                    pcStatus = 'play';
                }
            }
        }

       function pcBack() {

            var channelID = 0; // test

            debug( 'pcBack pcIsChanListShow = ' + pcIsChanListShow );

            // 列表显示时，隐藏列表
            if ( pcIsChanListShow ) {

            	pcHideChanList();

            	return;
            }

            debug( 'pcBack pcIsProgressShow = ' + pcIsProgressShow );
            // 进度条显示时，隐藏进度条
            if ( pcIsProgressShow ) {

            	// 不为直播，返回播放直播
            	if ( pcType === 'LiveTV' ) {


            		// 为直播时直接隐藏进度条
            		pcHideProgress();

            	} else {

            		// 进度条显示，且不为直播时，返回播放直播
            		debug( 'pcBack joinChannel();' );

            		// 统统返回到直播
            		pcType = 'LiveTV';

            		pcShow();

            		// mp.stop( 0 );
            		// mp.joinChannel( channelNums[ currChannelIndex ] );

            		debug( 'pcback joinChannel();' );


            		pcStatus = 'play';

            	}

            	// pcHideProgress();

            	return;
            } else {

            	// 进度条未显示时，返回上一页
            	debug( 'pcBack back to last page' );
            }

        }

        window.onkeydown = pcEventHandler;

        function pcEventHandler( event ) {

            var keycode = event.which ? event.which : event.keycode;

            debug( 'eh ---------------- keycode = ' + keycode );
            debug( 'eh ---------------- pcIsChanListShow = ' + pcIsChanListShow );
            debug( 'eh ---------------- pcIsProgressShow = ' + pcIsProgressShow );

            switch ( keycode ) {


            	case 38:

            		if ( pcIsChanListShow ) {

	            		pcKeyUp();
            		}
            		return false;
            		break;
            	case 40:

            		if ( pcIsChanListShow ) {

	            		pcKeyDown();
            		}
            		return false;
            		break;
                case 37:
                    return false;
                    break;
                case 39:
                    return false;
                    break;
                // for test start
                case 106: // 0  暂停
                case 48:

                	/*
                	if ( !pcIsProgressShow ) {

                		pcShowProgress();

                		pcShow();
                	} */

                	if ( pcIsProgressShow ) {

	                    pcPauseOrPlay();
                	}
                    return false;
                    break;
                case 8: // 1  back
                case 49:

                    pcBack();
                    return false;
                    break;
                case 50: // 2 list

                	// 进度条显示的情况下按确定键才能显示列表
                	if ( pcIsProgressShow ) {

	                	pcShowChanList();
                	}
                    return false;
                    break; 
                 case 51: // 3 progress

                 	pcInit( pcType );
                 	return false;
                 	break;
                // for test end
                default:
                    return true;    
                    break;
            }
        };

        /* ---------------------- 私有方法 ----------------------- */

        function pcShowProgress() {
            
        	debug( '----- progress showProgress pcIsProgressShow = ' + pcIsProgressShow );

            // 显示进度条
            if ( !pcIsProgressShow ) {

	            $( pcIds.progress ).style.display = 'block';

	        	pcIsProgressShow = true;
            }
        };

        function pcHideProgress() {
            
        	debug( '----- progress hideProgress pcIsProgressShow = ' + pcIsProgressShow );

            // 显示进度条
            if ( pcIsProgressShow ) {

	            $( pcIds.progress ).style.display = 'none';

	        	pcIsProgressShow = false;
            }
        }

        function isArray( arr ) {
            
            return Object.prototype.toString.call( arr ) === '[object Array]';
        }

        function isObject( obj ) {
            
            return Object.prototype.toString.call( obj ) === '[object Object]';
        }
        function isTextNode( node ) {
            
            return Object.prototype.toString.call( node ) === '[object Text]'; 
        }

        // 判断 div 实现显示
        function isDivShow( id ) {
            
            if ( typeof id !== 'string' ) {
                return false;
            }

            var e = $( id ),
                v = e.style.visibility,
                d = e.style.display;

            if ( v !== '' ) {

                return v !== 'hidden';
            }

            if ( d !== '' ) {

                return d !== 'none';
            }
        }


		function $( id ) {

		    return document.getElementById( id );
		}

		function debug( str ) {

		    // iPanel.debug( '[ui_pc] ---- ' + str );
		    console.log( '[pc-----]' + str );
		}
	</script>
</body>
</html>